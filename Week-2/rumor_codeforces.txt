#include<bits/stdc++.h>
 
using namespace std;
 
vector <int> bribe, vis, adj[100001];
 
int dfs(int curr_node) // dfs of a component
{
    vis[curr_node] = true;
    int min_bribe = bribe[curr_node];
    for(auto child : adj[curr_node])
    {
        if(vis[child] == false)
            min_bribe = min(min_bribe, dfs(child));
    }
    return min_bribe;
}
 
int main()
{
    int n, m;
    long long int res = 0;
    cin >> n >> m;
 
    bribe.resize(n+1);
    vis.resize(n+1, false);
 
    for(int i = 1; i <= n; i++)
        cin >> bribe[i];
    for(int i = 0; i < m; i++)
    {
        int x, y;
        cin >> x >> y;
        adj[x].push_back(y);
        //adj[y].push_back(x);
    }
 
    for(int i = 1; i <= n; i++)
    {
        if(vis[i] == false)
            res += dfs(i);
    }
    cout << res;
    return 0;
}